<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>LaTeX-Test</title>
      <link href="/2024/07/29/LaTeX-Test/"/>
      <url>/2024/07/29/LaTeX-Test/</url>
      
        <content type="html"><![CDATA[<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle mathsize="2.488em"><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow></munderover><mo>=</mo><mfrac><mrow><mo>+</mo><mi mathvariant="normal">∞</mi></mrow><mn>2</mn></mfrac></mstyle></mrow><annotation encoding="application/x-tex">\Huge\sum_{i=1}^{+\infty}=\dfrac{+\infty}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.966703780000001em;vertical-align:-3.39806492em;"></span><span class="mop op-limits sizing reset-size6 size11"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.836269638263666em;"><span style="top:-3.2222182797427648em;margin-left:0em;"><span class="pstrut" style="height:4.4879999999999995em;"></span><span class="sizing reset-size11 size10 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-4.488005em;"><span class="pstrut" style="height:4.4879999999999995em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-5.738005em;margin-left:0em;"><span class="pstrut" style="height:4.4879999999999995em;"></span><span class="sizing reset-size11 size10 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3657817202572347em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel sizing reset-size6 size11">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.84246904em;vertical-align:-1.706768em;"></span><span class="mord sizing reset-size6 size11"><span class="mopen nulldelimiter sizing reset-size11 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em;"><span style="top:-3.8019999999999996em;"><span class="pstrut" style="height:4.4879999999999995em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-4.718em;"><span class="pstrut" style="height:4.4879999999999995em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-5.165em;"><span class="pstrut" style="height:4.4879999999999995em;"></span><span class="mord"><span class="mord">+</span><span class="mord">∞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size11 size6"></span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mstyle mathsize="2.488em"><mtext>主</mtext><mo>=</mo><mn>6</mn></mstyle></mrow><annotation encoding="application/x-tex">\Huge\text{主}=6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.7001250399999999em;vertical-align:0em;"></span><span class="mord text sizing reset-size6 size11"><span class="mord cjk_fallback">主</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel sizing reset-size6 size11">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6033667200000001em;vertical-align:0em;"></span><span class="mord sizing reset-size6 size11">6</span></span></span></span></span></p><pre class="highlight"><code class="c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<span class="hljs-keyword">namespace</span> _yz&#123;<span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<span class="hljs-type">const</span> ll N=<span class="hljs-number">200000</span><span class="hljs-number">+10</span>;<span class="hljs-keyword">struct</span> <span class="hljs-title class_">point</span>&#123;ll x,y,n,t;&#125;p[N];ll n,ans=<span class="hljs-number">0</span>;multiset&lt;point&gt;s;<span class="hljs-type">bool</span> <span class="hljs-keyword">operator</span>&lt;(point a,point b)&#123;<span class="hljs-keyword">if</span>(a.x==b.x) <span class="hljs-keyword">return</span> a.y&lt;b.y;<span class="hljs-keyword">return</span> a.x&lt;b.x;&#125;<span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">cmp</span><span class="hljs-params">(point a,point b)</span></span>&#123;<span class="hljs-keyword">if</span>(a.y==b.y) <span class="hljs-keyword">return</span> a.x&gt;b.x;<span class="hljs-keyword">return</span> a.y&gt;b.y;&#125;<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;ll opt,a,b,c;<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lld&quot;</span>,&amp;n);<span class="hljs-keyword">for</span>(ll i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%lld%lld%lld%lld&quot;</span>,&amp;opt,&amp;b,&amp;a,&amp;c);p[i]=(point)&#123;a+b,b-a,c,opt&#125;;&#125;<span class="hljs-built_in">sort</span>(p<span class="hljs-number">+1</span>,p+n<span class="hljs-number">+1</span>,cmp);<span class="hljs-keyword">for</span>(ll i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<span class="hljs-keyword">if</span>(p[i].t==<span class="hljs-number">2</span>) s.<span class="hljs-built_in">insert</span>(p[i]);<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">while</span>(p[i].n)&#123;<span class="hljs-keyword">auto</span> it=s.<span class="hljs-built_in">lower_bound</span>(p[i]);<span class="hljs-keyword">if</span>(it==s.<span class="hljs-built_in">end</span>()) <span class="hljs-keyword">break</span>;point now=(*it);ll add=<span class="hljs-built_in">min</span>(now.n,p[i].n);p[i].n-=add; now.n-=add; ans+=add;s.<span class="hljs-built_in">erase</span>(it);<span class="hljs-keyword">if</span>(now.n&gt;=<span class="hljs-number">1</span>) s.<span class="hljs-built_in">insert</span>(now);&#125;&#125;&#125;<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld\n&quot;</span>,ans);<span class="hljs-keyword">return</span>;&#125;&#125;<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;_yz::<span class="hljs-built_in">main</span>();<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;&#125;</code></pre><p><img src="https://cdn.jsdelivr.net/gh/Yurchiu/PicGo/20240325_202902.jpg" alt="" /></p>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/29/hello-world/"/>
      <url>/2024/07/29/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><pre class="highlight"><code class="bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><pre class="highlight"><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><pre class="highlight"><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><pre class="highlight"><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>[Theme] Readme</title>
      <link href="/2023/01/10/Cutie%20Document/"/>
      <url>/2023/01/10/Cutie%20Document/</url>
      
        <content type="html"><![CDATA[<h1 id="theme-cutie"><a class="markdownIt-Anchor" href="#theme-cutie"></a> Theme Cutie</h1><p><img src="https://cdn.jsdelivr.net/gh/yz-hs/PicGo/intro4.png" alt="" /></p><p><strong>This theme is still under development and maintenance. If there are bugs, optimization requirements, etc., you can Issue, PR or leave a message in <a href="/pages/chat">here</a>.</strong></p><p>中文版文档，本主题的完整说明：<a href="/2020/08/22/Cutie%20%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/">Chinese version</a>。</p><span id="more"></span><h2 id="background"><a class="markdownIt-Anchor" href="#background"></a> Background</h2><p>In order to learn relevant knowledge and make a good-looking theme, I made this. The layout of the theme is like <a href="https://www.ihewro.com/archives/489/">handsome</a>, a typecho theme. Most of the codes were originally programmed by me, while the rest were from the Internet, for instance, <a href="https://mkblog.cn/">mkBlog</a>.</p><h2 id="install"><a class="markdownIt-Anchor" href="#install"></a> Install</h2><p>You can install it by running this command:</p><pre class="highlight"><code class="bash">git <span class="hljs-built_in">clone</span> https://github.com/yz-hs/cutie.git</code></pre><h2 id="usage"><a class="markdownIt-Anchor" href="#usage"></a> Usage</h2><p>Firstly, you need to set the value of <code>theme</code> in the blog configuration file (<code>/path-to-your-blog/_config.yml</code>) to <code>cutie</code> to enable this theme.</p><p>Then, you need to read documents to further configure the theme and learn more about this theme. Most of them are in Chinese.</p><p><strong>This theme relies on some plug-ins. Please be sure to read the <a href="/2020/08/22/Cutie%20%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/">Chinese version</a> first.</strong></p><h2 id="demo"><a class="markdownIt-Anchor" href="#demo"></a> Demo</h2><p><a href="https://Yurchiu.github.io/">https://Yurchiu.github.io/</a></p><h2 id="maintainers"><a class="markdownIt-Anchor" href="#maintainers"></a> Maintainers</h2><p>@<a href="https://github.com/Yurchiu">Yurchiu</a></p><h2 id="contributors"><a class="markdownIt-Anchor" href="#contributors"></a> Contributors</h2><p>@<a href="https://github.com/Yurchiu">Yurchiu</a></p><p>@<a href="https://github.com/tsxc-github">tsxc</a></p><p>Feel free to dive in! Open an issue or submit PRs.</p><h2 id="license"><a class="markdownIt-Anchor" href="#license"></a> License</h2><p>MIT</p>]]></content>
      
      
      <categories>
          
          <category> Cutie </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Cutie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Cutie 使用文档</title>
      <link href="/2020/08/22/Cutie%20%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/"/>
      <url>/2020/08/22/Cutie%20%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h1 id="cutie"><a class="markdownIt-Anchor" href="#cutie"></a> Cutie</h1><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p><img src="https://cdn.jsdelivr.net/gh/yz-hs/PicGo/intro4.png" alt="" /></p><p>Cutie 是一个 Hexo 主题。本主题由 <a href="https://github.com/Yurchiu/">Yurchiu</a> 制作，外观借鉴了 <a href="https://www.ihewro.com/archives/489/">handsome</a> 主题，部分代码借鉴自 <a href="https://mkblog.cn/">mkBlog</a>。本主题可在 <a href="https://github.com/yz-hs/Cutie">Github</a> 获取。</p><p>本主题依赖一些插件。请务必先看本文档，否则无法部署成功。</p><p><strong>本主题仍在开发维护中。若有 Bug、优化需求等，可 Issue、PR 或在 <a href="https://Yurchiu.github.io/somepage/chat/">https://Yurchiu.github.io/somepage/chat/</a> 留言</strong>。</p><span id="more"></span><h2 id="特点"><a class="markdownIt-Anchor" href="#特点"></a> 特点</h2><ul><li>自适应。</li><li>支持多个第三方评论平台（Gitalk，Livere，Giscus 等等）。</li><li>几种配色（<code>std</code>、<code>white</code>、<code>night</code>，本 Blog 使用 <code>white</code> 配色）与三种特殊样式。</li><li>中英文支持。</li><li>Pjax 支持。</li><li>其他的许多特性！</li></ul><h2 id="todo-list"><a class="markdownIt-Anchor" href="#todo-list"></a> Todo List</h2><div class='checkbox'><input type="checkbox" />            <p>在未来优化整体框架。</p>            </div><h2 id="首次使用"><a class="markdownIt-Anchor" href="#首次使用"></a> 首次使用</h2><h3 id="dependencies"><a class="markdownIt-Anchor" href="#dependencies"></a> Dependencies</h3><ol><li><p>“RSS”依赖 <code>hexo-generator-feed</code> 插件来运行。 请运行 <code>npm install hexo-generator-feed</code>。</p></li><li><p>“wordcount”依赖 <code>hexo-wordcount</code> 插件来运行。 请运行 <code>npm i hexo-wordcount --save</code>。</p></li><li><p>“blog-encrypt”依赖 <code>hexo-blog-encrypt</code> 插件来运行。 请运行 <code>npm install --save hexo-blog-encrypt</code>。</p></li><li><p>“Search”依赖 <code>hexo-generator-search</code>。请运行 <code>npm install hexo-generator-search --save</code>。其使用方法，参见 <a href="https://github.com/wzpan/hexo-generator-search">https://github.com/wzpan/hexo-generator-search</a>。</p><p>设置站内搜索页的方法是：在 front-matter 加上 <code>layout: search</code>。</p></li><li><p>数学公式的依赖见下文。</p></li><li><p>推荐安装插件： <code>hexo-neat</code> <code>hexo-generator-sitemap</code> <code>hexo-butterfly-tag-plugins-plus</code>。</p></li></ol><h3 id="数学公式"><a class="markdownIt-Anchor" href="#数学公式"></a> 数学公式</h3><p>本主题不内置对数学公式的支持（但已经包含 CSS）。请按照以下方法来支持数学公式：</p><p>Git bash 运行：</p><pre class="highlight"><code class="bash">npm un hexo-renderer-markednpm i hexo-renderer-markdown-it-plusnpm i katexnpm i @andatoshiki/markdown-it-katex</code></pre><p>在博客配置文件写入：</p><pre class="highlight"><code class="yaml"><span class="hljs-attr">markdown_it_plus:</span>  <span class="hljs-attr">plugins:</span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">plugin:</span>      <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;@iktakahiro/markdown-it-katex&#x27;</span>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span>    <span class="hljs-bullet">-</span> <span class="hljs-attr">plugin:</span>      <span class="hljs-attr">name:</span> <span class="hljs-string">&#x27;@andatoshiki/markdown-it-katex&#x27;</span>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span></code></pre><p>记得 <code>hexo clean</code>。</p><h3 id="添加文章置顶"><a class="markdownIt-Anchor" href="#添加文章置顶"></a> 添加文章置顶</h3><h4 id="方法一"><a class="markdownIt-Anchor" href="#方法一"></a> 方法一</h4><p>请在 <code>path-to-your-blog/node_modules/hexo-generator-index/lib/generator.js</code> 的合适位置添加如下代码：</p><pre class="highlight"><code class="js">posts.<span class="hljs-property">data</span> = posts.<span class="hljs-property">data</span>.<span class="hljs-title function_">sort</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) &#123;      <span class="hljs-keyword">if</span>(a.<span class="hljs-property">top</span> &amp;&amp; b.<span class="hljs-property">top</span>) &#123;          <span class="hljs-keyword">if</span>(a.<span class="hljs-property">top</span> == b.<span class="hljs-property">top</span>) <span class="hljs-keyword">return</span> b.<span class="hljs-property">date</span> - a.<span class="hljs-property">date</span>;          <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> b.<span class="hljs-property">top</span> - a.<span class="hljs-property">top</span>;      &#125;      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a.<span class="hljs-property">top</span> &amp;&amp; !b.<span class="hljs-property">top</span>) &#123;          <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;      &#125;      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!a.<span class="hljs-property">top</span> &amp;&amp; b.<span class="hljs-property">top</span>) &#123;          <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;      &#125;      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> b.<span class="hljs-property">date</span> - a.<span class="hljs-property">date</span>;  &#125;);</code></pre><p>如代码所示，“文章置顶” 原理是按照文章的 top 值排序，并加上 “置顶” 标签。</p><h4 id="方法二"><a class="markdownIt-Anchor" href="#方法二"></a> 方法二</h4><p>卸载系统自带的排序插件：</p><pre class="highlight"><code class="swift">npm uninstall hexo<span class="hljs-operator">-</span>generator<span class="hljs-operator">-</span>index</code></pre><p>添加替代插件：</p><pre class="highlight"><code class="swift">npm install hexo<span class="hljs-operator">-</span>generator<span class="hljs-operator">-</span>index<span class="hljs-operator">-</span>pin<span class="hljs-operator">-</span>top <span class="hljs-operator">--</span>save</code></pre><p>同样按照文章 top 值排序。</p><h2 id="页面配置"><a class="markdownIt-Anchor" href="#页面配置"></a> 页面配置</h2><h3 id="tagscategories"><a class="markdownIt-Anchor" href="#tagscategories"></a> Tags/Categories</h3><p>设置“标签页面”或“分类页面”的方法是：在 front-matter 加上 <code>layout: tags/categories</code>。</p><h3 id="search"><a class="markdownIt-Anchor" href="#search"></a> Search</h3><p>本主题支持两种搜索方式：站内搜索和站外搜索。</p><p>添加“搜索页面”方法：新建一个 page，在 front-matter 加上 <code>layout: search</code>。依赖 <code>hexo-generator-search</code>。</p><p>这里的站外搜索使用必应搜索。对于其他搜索引擎，可以自己更改。</p><p><strong>请注意：填入 search.xml 的链接时，一定要加上博客配置文件中的 url</strong>。</p><h3 id="setting"><a class="markdownIt-Anchor" href="#setting"></a> Setting</h3><p>本主题支持“设置页面”，供访者自主设置主题样式、特殊效果等。</p><p>添加“设置页面”方法：新建一个 page，在 front-matter 加上 <code>layout: setting</code>。</p><h3 id="mood"><a class="markdownIt-Anchor" href="#mood"></a> Mood</h3><p>本主题支持“说说页面”。</p><p>添加“说说页面”方法：新建一个 page，添加如下代码：</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript">  $(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;$(<span class="hljs-string">&quot;info&quot;</span>).<span class="hljs-title function_">prepend</span>(<span class="hljs-string">&quot;&lt;i class=&#x27;fa fa-clock-o&#x27;&gt;&lt;/i&gt; &quot;</span>);&#125;);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;mood-list&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-comment">&lt;!-- 头像，使用 img 标签 --&gt;</span>&quot;<span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">inner</span>&gt;</span><span class="hljs-comment">&lt;!-- 说说内容 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">info</span>&gt;</span><span class="hljs-comment">&lt;!-- 说说发表时间 --&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">info</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">inner</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>...<span class="hljs-comment">&lt;!-- 不断重复第 7-9 行 --&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></code></pre><h3 id="404-page"><a class="markdownIt-Anchor" href="#404-page"></a> 404 page</h3><p>在博客配置文件写入：</p><pre class="highlight"><code class="yaml"><span class="hljs-attr">skip_render:</span>  <span class="hljs-bullet">-</span> <span class="hljs-string">&#x27;404.html&#x27;</span></code></pre><p>之后，把主题文件夹下的 <code>_doc/404.html</code> 置入博客 <code>source</code> 文件夹下（不是主题的 <code>source</code> 文件夹）。</p><p>或者，创建新 page 作为 404 页面。在 front-matter 写入 <code>permalink: /404.html</code>。</p><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><h3 id="front-matter"><a class="markdownIt-Anchor" href="#front-matter"></a> Front-matter</h3><p>本主题可设置如下 front-matter：</p><ul><li><code>discomments: true</code>——是否禁止评论。</li><li><code>top: [number]</code>——设置文章排列优先级。注意，参看“添加文章置顶”部分来获取启用方式。</li><li><code>author: [list/array of string]</code>——设置作者（支持多作者）。默认为博客根目录中 <code>config_.yml</code> 中的内容。</li></ul><p>下面是关于文章卡片的。文章卡片指在首页显示的含文章摘要的文本框。设置了背景图片，称为图片文章卡片；否则称为文字文章卡片。</p><p>图片文章卡片：</p><ul><li><code>bgimg: /path/to/your/pic.img</code>——设置文章卡片背景图片。</li><li><code>height: [string]</code>——设定文章卡片高度（数字+单位）。默认 <code>30em</code>，亦可在 <code>_config.yml</code> 修改默认值。</li></ul><p>文字文章卡片：</p><ul><li><code>faname: [string]</code>——设置文章卡片的 Font Awesome 图标。默认是 <code>fa-file-text-o</code>。</li><li><code>disfa: true</code>——禁用文章卡片的 Font Awesome 图标。</li></ul><p>注意：<code>bgimg</code> 和 <code>faname</code> 冲突。<code>bgimg</code> 优先。</p><h3 id="禁用-devtools"><a class="markdownIt-Anchor" href="#禁用-devtools"></a> 禁用 Devtools</h3><p>在需禁用 Devtools 的页面加入如下代码：</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/js/devtools.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p>功能：</p><ul><li>当使用 Devtools 时，跳转网页；</li><li>禁止右键，禁止选中文本。</li></ul><h3 id="custom"><a class="markdownIt-Anchor" href="#custom"></a> Custom</h3><p>为了避免自主修改主题源码造成的麻烦，自定义 css 及 js 时，可以在 <code>/source/custom</code> 文件夹下自主添加所需要的 css 和 js 代码。</p><p>主题只会引用其中的 <code>custom.css</code> 和 <code>custom.js</code>。</p><h3 id="短代码效果"><a class="markdownIt-Anchor" href="#短代码效果"></a> 短代码效果</h3><p>理论上 Bootstrap5 中的所有都可以使用。另外，本主题还包括下面的一些东西。</p><details><summary>混乱文字</summary><p><strong>代码</strong></p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;chaffle&quot;</span> <span class="hljs-attr">data-lang</span>=<span class="hljs-string">&quot;zh&quot;</span>&gt;</span>“她好可爱啊！”<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><p><strong>效果</strong></p><div class="chaffle" data-lang="zh">“她好可爱啊！”</div></details><hr /><details><summary>展开折叠</summary><p><strong>代码</strong></p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">details</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">summary</span>&gt;</span>请点击<span class="hljs-tag">&lt;/<span class="hljs-name">summary</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>就算风吹散了冰雪，想念也会留存下来。<span class="hljs-tag">&lt;<span class="hljs-name">br</span> /&gt;</span>鼠标点击会展开此内容。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">details</span>&gt;</span>防止混淆的文字。</code></pre><p><strong>效果</strong></p><details>    <summary>请点击</summary>    <p>就算风吹散了冰雪，想念也会留存下来。<br />鼠标点击会展开此内容。</p></details><p>防止混淆的文字。</p></details><hr /><details><summary>黑幕类</summary><p><strong>代码</strong></p><pre class="highlight"><code class="html">提示：<span class="hljs-tag">&lt;<span class="hljs-name">shady</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;你知道的太多了&quot;</span>&gt;</span>就算风吹散了冰雪，想念也会留存下来。鼠标移在此上会显示此内容<span class="hljs-tag">&lt;/<span class="hljs-name">shady</span>&gt;</span>。仿自：[萌娘百科](https://zh.moegirl.org.cn/)。由于本句话被高度加密，即使使用小刀或者<span class="hljs-tag">&lt;<span class="hljs-name">black</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;你不知道的太多了&quot;</span>&gt;</span>除了被选中<span class="hljs-tag">&lt;/<span class="hljs-name">black</span>&gt;</span>也无法划开屏幕上的部分黑幕。提示：<span class="hljs-tag">&lt;<span class="hljs-name">blur</span>&gt;</span>没错，你近视了。<span class="hljs-tag">&lt;/<span class="hljs-name">blur</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">invsb</span>&gt;</span>以至于你都看不见这句话。<span class="hljs-tag">&lt;/<span class="hljs-name">invsb</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">blur</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>温馨提示<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span>    你需要换眼镜。请立即赶往附近的眼镜店。<span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">blur</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">invsb</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-alert danger&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-info-circle&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>不用换眼镜了。你已经看不见了。<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">invsb</span>&gt;</span></code></pre><p><strong>效果</strong></p><p>提示：<shady title="你知道的太多了">就算风吹散了冰雪，想念也会留存下来。鼠标移在此上会显示此内容</shady>。仿自：<a href="https://zh.moegirl.org.cn/">萌娘百科</a>。</p><p>由于本句话被高度加密，即使使用小刀或者<black title="你不知道的太多了">除了被选中</black>也无法划开屏幕上的部分黑幕。</p><p>提示：<blur>没错，你近视了。</blur><invsb>以至于你都看不见这句话。</invsb></p><blur><fieldset>    <legend>温馨提示</legend>    你需要换眼镜。请立即赶往附近的眼镜店。</fieldset></blur><div class="alert alert-danger"><invsb><i class="fa fa-info-circle"></i>不用换眼镜了。你已经看不见了。</invsb></div></details><hr /><details><summary>弹窗</summary><p><strong>代码</strong></p><p>请访问文章：<a href="/b12321c1b85e/">SweetAlert 的使用</a>。</p><p><strong>效果</strong></p><p><button type="button" class="btn btn-outline-secondary" onclick="demo()" style="display:block;margin:0 auto">点击查看Demo</button></p><script>  function demo() {swal.fire({      title: "这是示例 >_<",      text: "⌈ Yurchiu 是一只可爱的 OIer。 ⌋",      icon: "success"}).then((result) => {swal.fire({  title: '请确认',  text: "如果你吊打了 Yurchiu，你会 AK IOI！ >_<",  showCancelButton: true,  confirmButtonText: '吊打她！',  cancelButtonText: '她这么可爱，算了！',  reverseButtons: true}).then((result) => {  if (result.value) {    swal.fire({      text: '你成功地吊打了 Yurchiu，并 AK 了 IOI，orz。',    })  } else if (    result.dismiss === Swal.DismissReason.cancel  ) {    swal.fire({      text: '你不屑于吊打 Yurchiu，而是 AK IOI，orz。',    })  }})})}</script></details><hr /><details><summary>提示框</summary><p><strong>代码</strong></p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>温馨提示<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>提示点什么好呢？让我想想……<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span></code></pre><p><strong>效果</strong></p><fieldset>    <legend>温馨提示</legend>    <p>提示点什么好呢？让我想想……</p></fieldset></details><hr /><details><summary>分栏</summary><p><strong>代码</strong></p><p>html（建议不要复制这个）:</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tab-page&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tabTitle&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;current&quot;</span>&gt;</span>默认<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>文字<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>其他<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tabContent&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>请在 `tabTitle` 的第一个的 `li` 标签加上 `current` 类，除了 `tabContent` 的第一个 `div` 标签都加 `hide` 类。你可以加不止三个标签。不过太长会溢出。以下是代码纯净版（建议复制这个）：​```html<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tab-page&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tabTitle&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;current&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tabContent&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>​```<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span>You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">details</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">summary</span>&gt;</span>请点击<span class="hljs-tag">&lt;/<span class="hljs-name">summary</span>&gt;</span>就算风吹散了冰雪，想念也会留存下来。<span class="hljs-tag">&lt;/<span class="hljs-name">details</span>&gt;</span>另一温馨提示：<span class="hljs-tag">&lt;<span class="hljs-name">shady</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;你知道的太多了&quot;</span>&gt;</span>是的，在标签页中也可加入HTML元素！<span class="hljs-tag">&lt;/<span class="hljs-name">shady</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><p>javascript:</p><pre class="highlight"><code class="javascript">$(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;      <span class="hljs-keyword">var</span> ali = $(<span class="hljs-string">&#x27;tabTitle&gt;ul&gt;li&#x27;</span>);      <span class="hljs-keyword">var</span> aDiv = $(<span class="hljs-string">&#x27;tabContent&gt;div&#x27;</span>);      <span class="hljs-keyword">var</span> timeId = <span class="hljs-literal">null</span>;      ali.<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;        <span class="hljs-keyword">var</span> _this = $(<span class="hljs-variable language_">this</span>);        timeId = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;          _this.<span class="hljs-title function_">addClass</span>(<span class="hljs-string">&#x27;current&#x27;</span>).<span class="hljs-title function_">siblings</span>().<span class="hljs-title function_">removeClass</span>(<span class="hljs-string">&#x27;current&#x27;</span>);          <span class="hljs-keyword">var</span> index = _this.<span class="hljs-title function_">index</span>();          aDiv.<span class="hljs-title function_">eq</span>(index).<span class="hljs-title function_">show</span>().<span class="hljs-title function_">siblings</span>().<span class="hljs-title function_">hide</span>();        &#125;);      &#125;);  &#125;);</code></pre><p><strong>效果</strong></p><div class="tab-page"> <div class="tabTitle">  <ul>    <li class="current">默认</li>    <li>文字</li>    <li>其他</li>  </ul> </div> <div class="tabContent">  <div>请在 `tabTitle` 的第一个的 `li` 标签加上 `current` 类，除了 `tabContent` 的第一个 `div` 标签都加 `hide` 类。<p>你可以加不止三个标签。不过太长会溢出。</p><p>以下是代码纯净版（建议复制这个）：</p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tab-page&quot;</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tabTitle&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;current&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;tabContent&quot;</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;hide&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre></div><div class="hide"><p>You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!</p></div><div class="hide"><details>    <summary>请点击</summary><p>就算风吹散了冰雪，想念也会留存下来。</p></details><p>另一温馨提示：<shady title="你知道的太多了">是的，在标签页中也可加入HTML元素！</shady></p></div></div></div><script>$(function(){      var ali = $('.tabTitle>ul>li');      var aDiv = $('.tabContent>div');      var timeId = null;      ali.click(function(){        var _this = $(this);        timeId = setTimeout(function(){          _this.addClass('current').siblings().removeClass('current');          var index = _this.index();          aDiv.eq(index).show().siblings().hide();        });      });  });</script></details><hr /><details><summary>标签</summary><p><strong>代码</strong></p><pre class="highlight"><code class="html">请在 `tabTitle` 的<span class="hljs-tag">&lt;<span class="hljs-name">tag</span>&gt;</span>第一个<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span>的 `li` 标签加上 `current` 类，除了 `tabContent` 的第一个 `div` 标签都加 `hide` 类。你可以加<span class="hljs-tag">&lt;<span class="hljs-name">tag</span>&gt;</span>不止三个<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span>标签。不过太长会<span class="hljs-tag">&lt;<span class="hljs-name">tag</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;background: orange&quot;</span>&gt;</span>溢出<span class="hljs-tag">&lt;/<span class="hljs-name">tag</span>&gt;</span>。`tag` 自动轮换四种背景色，当然也可以自己指定。</code></pre><p><strong>效果</strong></p><p>请在 <code>tabTitle</code> 的<tag>第一个</tag>的 <code>li</code> 标签加上 <code>current</code> 类，除了 <code>tabContent</code> 的第一个 <code>div</code> 标签都加 <code>hide</code> 类。</p><p>你可以加<tag>不止三个</tag>标签。不过太长会<tag style="background: orange">溢出</tag>。</p><p><code>tag</code> 自动轮换四种背景色，当然也可以自己指定。</p></details><hr /><details><summary>小号文字</summary>​    <p><strong>代码</strong></p><pre class="highlight"><code class="html">温馨提示：提示点什么好呢<span class="hljs-tag">&lt;<span class="hljs-name">small</span>&gt;</span>真的没有可提示的,,,<span class="hljs-tag">&lt;/<span class="hljs-name">small</span>&gt;</span></code></pre><p><strong>效果</strong></p><p>温馨提示：提示点什么好呢<small>真的没有可提示的,</small></p></details><hr /><details><summary>字幕</summary><p><strong>代码</strong></p><pre class="highlight"><code class="html"><span class="hljs-comment">&lt;!--滚动方向 direction 4个值 up down left right  默认从右向左--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">marquee</span> <span class="hljs-attr">direction</span>=<span class="hljs-string">&quot;up&quot;</span>&gt;</span>我向上滚动<span class="hljs-tag">&lt;/<span class="hljs-name">marquee</span>&gt;</span><span class="hljs-comment">&lt;!--3个值 scroll-循环滚动 slide-只滚动一次 alternate-来回滚动  默认循环滚动--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">marquee</span> <span class="hljs-attr">behavior</span>=<span class="hljs-string">&quot;slide&quot;</span>&gt;</span>我只滚动一次<span class="hljs-tag">&lt;/<span class="hljs-name">marquee</span>&gt;</span><span class="hljs-comment">&lt;!--值越大，滚动速度越快 一般5-10比较适宜消息观看--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">marquee</span> <span class="hljs-attr">scrollamount</span>=<span class="hljs-string">&quot;20&quot;</span>&gt;</span>我是速度为20的滚动<span class="hljs-tag">&lt;/<span class="hljs-name">marquee</span>&gt;</span><span class="hljs-comment">&lt;!--值越大，滚动速度越慢，通常不设置--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">marquee</span> <span class="hljs-attr">scrolldelay</span>=<span class="hljs-string">&quot;110&quot;</span>&gt;</span>我延迟滚动<span class="hljs-tag">&lt;/<span class="hljs-name">marquee</span>&gt;</span><span class="hljs-comment">&lt;!-- 默认值-1或infinite 表示无限循环滚动 loop=&quot;数值&quot; 表示滚动相应的次数--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">marquee</span> <span class="hljs-attr">loop</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>我是loop循环滚动<span class="hljs-tag">&lt;/<span class="hljs-name">marquee</span>&gt;</span><span class="hljs-comment">&lt;!--宽100px 高90px 背景色为#f5f5f5的滚动区域--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">marquee</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;90&quot;</span> <span class="hljs-attr">bgcolor</span>=<span class="hljs-string">&quot;#f5f5f5&quot;</span> &gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我是滚动1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我是滚动2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我是滚动3<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">marquee</span>&gt;</span><span class="hljs-comment">&lt;!--滚动空间 hspace-水平边距 vspace-垂直边距--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">marquee</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">hspace</span>=<span class="hljs-string">&quot;20&quot;</span> <span class="hljs-attr">vspace</span>=<span class="hljs-string">&quot;10&quot;</span> &gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我是滚动1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我是滚动2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我是滚动3<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">marquee</span>&gt;</span><span class="hljs-comment">&lt;!--鼠标悬停，滚动停止   鼠标离开，滚动继续--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">marquee</span> <span class="hljs-attr">onmouseover</span>=<span class="hljs-string">&quot;this.stop()&quot;</span> <span class="hljs-attr">onmouseout</span>=<span class="hljs-string">&quot;this.start()&quot;</span>&gt;</span>    我是滚动<span class="hljs-tag">&lt;/<span class="hljs-name">marquee</span>&gt;</span></code></pre><p><strong>效果</strong></p><!--滚动方向 direction 4个值 up down left right  默认从右向左--><p><marquee direction="up">我向上滚动</marquee></p><!--3个值 scroll-循环滚动 slide-只滚动一次 alternate-来回滚动  默认循环滚动--><p><marquee behavior="slide">我只滚动一次</marquee></p><!--值越大，滚动速度越快 一般5-10比较适宜消息观看--><p><marquee scrollamount="20">我是速度为20的滚动</marquee></p><!--值越大，滚动速度越慢，通常不设置--><p><marquee scrolldelay="110">我延迟滚动</marquee></p><!-- 默认值-1或infinite 表示无限循环滚动 loop="数值" 表示滚动相应的次数--><p><marquee loop="2">我是loop循环滚动</marquee></p><!--宽100px 高90px 背景色为#f5f5f5的滚动区域--><marquee width="100" height="90" bgcolor="#f5f5f5" >    <p>我是滚动1</p>    <p>我是滚动2</p>    <p>我是滚动3</p></marquee><!--滚动空间 hspace-水平边距 vspace-垂直边距--><marquee width="50" hspace="20" vspace="10" ><p>我是滚动1</p>    <p>我是滚动2</p>    <p>我是滚动3</p></marquee><!--鼠标悬停，滚动停止   鼠标离开，滚动继续--><marquee onmouseover="this.stop()" onmouseout="this.start()"><p>我是滚动</p></marquee></details><hr /><details><summary>时间轴</summary><p><strong>代码</strong></p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">ol</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;timeline&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">t</span>&gt;</span>时间轴<span class="hljs-tag">&lt;/<span class="hljs-name">t</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>2020/13/32<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>内容 1<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>2020/13/33<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>内容 2<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span></code></pre><p><strong>效果</strong></p><ol class="timeline">    <li> <t>时间轴</t> </li>    <li> <b>2020/13/32</b><p>内容 1</p> </li>    <li> <b>2020/13/33</b><p>内容 2</p> </li></ol></details><hr /><details><summary>注音</summary><p><strong>代码</strong></p><pre class="highlight"><code class="html"><span class="hljs-tag">&lt;<span class="hljs-name">ruby</span>&gt;</span>那 <span class="hljs-tag">&lt;<span class="hljs-name">rt</span>&gt;</span>n<span class="hljs-tag">&lt;/<span class="hljs-name">rt</span>&gt;</span>没 <span class="hljs-tag">&lt;<span class="hljs-name">rt</span>&gt;</span>m<span class="hljs-tag">&lt;/<span class="hljs-name">rt</span>&gt;</span>事 <span class="hljs-tag">&lt;<span class="hljs-name">rt</span>&gt;</span>s<span class="hljs-tag">&lt;/<span class="hljs-name">rt</span>&gt;</span>了 <span class="hljs-tag">&lt;<span class="hljs-name">rt</span>&gt;</span>l<span class="hljs-tag">&lt;/<span class="hljs-name">rt</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ruby</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ruby</span>&gt;</span>那没事了 <span class="hljs-tag">&lt;<span class="hljs-name">rt</span>&gt;</span>nmsl<span class="hljs-tag">&lt;/<span class="hljs-name">rt</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ruby</span>&gt;</span></code></pre><p><strong>效果</strong></p><ruby>那 <rt>n</rt>没 <rt>m</rt>事 <rt>s</rt>了 <rt>l</rt></ruby><ruby>那没事了 <rt>nmsl</rt></ruby></details><h3 id="外挂标签插件-third-party"><a class="markdownIt-Anchor" href="#外挂标签插件-third-party"></a> 外挂标签插件 <code>Third Party</code></h3><p>参见 <a href="https://akilar.top/posts/615e2dec/">https://akilar.top/posts/615e2dec/</a>。这里只展示效果。未列出的说明不支持，或不实用。通常会造成附近的 markdown 失效。</p><p>要想使用它，需要安装第三方插件 <code>hexo-butterfly-tag-plugins-plus</code>。</p><p><s>Yurchiu 已经很努力地尽量适配这个插件了哦！</s></p><details><summary>点击查看</summary><h4>行内文本样式 text</h4>1. 带<u>下划线</u>的文本；2. 带<emp>着重号</emp>的文本；3. 带<wavy>波浪线</wavy>的文本；4. 带<del>删除线</del>的文本；5. 键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd>；6. 密码样式的文本：<psw>这里没有验证码</psw>。<h4>行内文本 span</h4><strong>彩色文字</strong><p>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</p><p><strong>超大号文字</strong></p><span class='p center logo large'>Cutie</span><span class='p center small'>A terrible Theme for Hexo</span><h4>段落文本 p</h4><strong>彩色文字</strong><p>在一段话中方便插入各种颜色的标签，包括：</p><p class='p red'>红色</p><p class='p yellow'>黄色</p><p class='p green'>绿色</p><p class='p cyan'>青色</p><p class='p blue'>蓝色</p><p class='p gray'>灰色</p><strong>超大号文字</strong><p class='p center logo large'>Cutie</p><p class='p center small'>A terrible Theme for Hexo</p><h4>复选列表 checkbox</h4><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><h4>折叠框 folding</h4><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt="" /></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>貌似内部的代码不能正确换行。</p><pre class="highlight"><code class="javascript">posts.<span class="hljs-property">data</span> = posts.<span class="hljs-property">data</span>.<span class="hljs-title function_">sort</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) {      <span class="hljs-keyword">if</span>(a.<span class="hljs-property">top</span> &amp;&amp; b.<span class="hljs-property">top</span>) {          <span class="hljs-keyword">if</span>(a.<span class="hljs-property">top</span> == b.<span class="hljs-property">top</span>) <span class="hljs-keyword">return</span> b.<span class="hljs-property">date</span> - a.<span class="hljs-property">date</span>;          <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> b.<span class="hljs-property">top</span> - a.<span class="hljs-property">top</span>;      }      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(a.<span class="hljs-property">top</span> &amp;&amp; !b.<span class="hljs-property">top</span>) {          <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;      }      <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(!a.<span class="hljs-property">top</span> &amp;&amp; b.<span class="hljs-property">top</span>) {          <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;      }      <span class="hljs-keyword">else</span> <span class="hljs-keyword">return</span> b.<span class="hljs-property">date</span> - a.<span class="hljs-property">date</span>;});</code></pre>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><h4>链接卡片 link</h4><div class="tag link"><a class="link-card" title="Yurchiu" href="https://yz-hs.github.io/"><div class="left"><img src="/img/new-avatar.jpg"/></div><div class="right"><p class="text">Yurchiu</p><p class="url">https://yz-hs.github.io/</p></div></a></div><h4>进度条 progress</h4>文字不能太长。<div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><h4>诗词标签 poem</h4><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br />明月几时有？把酒问青天。<br />不知天上宫阙，今夕是何年？<br />我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br />起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br />不应有恨，何事长向别时圆？<br />人有悲欢离合，月有阴晴圆缺，此事古难全。<br />但愿人长久，千里共婵娟。</p></div><h4>气泡注释 bubble</h4>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">Flex 布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局"，用来为盒状模型提供最大的灵活性"</span></span>，<span class="bubble-content">transform 变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation 的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的 <span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path 属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span> 属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</details><h2 id="附注"><a class="markdownIt-Anchor" href="#附注"></a> 附注</h2><ol><li>推荐在文件 <code>path-to-your-blog/_config.yml</code> 中将 per_page 设置为 0。</li><li>为防止喧宾夺主，本主题不再提供博客美化 js。</li><li>如果一个页面中使用多个“标签页”，应使用 id 标注。例：</li></ol><div class="tab-page" id="tab1"> <div class="tabTitle">  <ul>    <li class="current">测试</li>    <li>文字</li>    <li>留空</li>    <li>嵌套</li>  </ul> </div> <div class="tabContent">  <div>测试测试测试测试测试测试测试测试测试测试</div>  <div class="hide">You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!You AK IOI!</div>  <div class="hide"></div>  <div class="hide">  <div class="tab-page" id="tab2"> <div class="tabTitle">  <ul>    <li class="current">可以</li>    <li>再次嵌套</li>  </ul> </div> <div class="tabContent">  <div>标签页可以进行嵌套。</div>  <div class="hide">防止占用篇幅就不再嵌套了（）</div> </div></div></div> </div></div><script>    $(function(){      var ali = $('#tab1>.tabTitle>ul>li');      var aDiv = $('#tab1>.tabContent>div');      var timeId = null;      ali.click(function(){        var _this = $(this);        timeId = setTimeout(function(){          _this.addClass('current').siblings().removeClass('current');          var index = _this.index();          aDiv.eq(index).show().siblings().hide();        });      });  });  $(function(){      var ali = $('#tab2>.tabTitle>ul>li');      var aDiv = $('#tab2>.tabContent>div');      var timeId = null;      ali.click(function(){        var _this = $(this);        timeId = setTimeout(function(){          _this.addClass('current').siblings().removeClass('current');          var index = _this.index();          aDiv.eq(index).show().siblings().hide();        });      });  });</script>]]></content>
      
      
      <categories>
          
          <category> Cutie </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Cutie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 博客搭建</title>
      <link href="/2019/10/03/Hexo%20%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/10/03/Hexo%20%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="1-安装-git-nodejs"><a class="markdownIt-Anchor" href="#1-安装-git-nodejs"></a> 1. 安装 git &amp; Node.js</h1><p>请自行下载。</p><p><a href="https://gitforwindows.org/">https://gitforwindows.org/</a></p><p><a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a></p><h1 id="2-安装-hexo"><a class="markdownIt-Anchor" href="#2-安装-hexo"></a> 2. 安装 Hexo</h1><p>先创建一个文件夹 blog，在这个文件夹下右键打开 git bash。如果 npm 不好用，使用 yarn。</p><pre class="highlight"><code class="bash">npm install -g hexo-cli</code></pre><p>初始化 Hexo。</p><pre class="highlight"><code class="bash">hexo initnpm install</code></pre><p>打开 Hexo 的服务，</p><pre class="highlight"><code class="bash">hexo ghexo server</code></pre><p>在浏览器输入 <code>localhost:4000</code> 就可以看到你生成的博客了。</p><p>Ctrl+C 关闭。</p><h1 id="3-github-创建个人仓库"><a class="markdownIt-Anchor" href="#3-github-创建个人仓库"></a> 3. GitHub 创建个人仓库</h1><p>你先要有一个 GitHub 账户，去<a href="https://github.com/">注册一个吧</a>。</p><p>创建一个和你用户名相同的仓库，<strong>后面加 <code>.github.io</code></strong></p><p><img src="https://cdn.jsdelivr.net/gh/yz-hs/PicGo/%E6%90%ADhexo%20(1).png" alt="" /></p><p><img src="https://cdn.jsdelivr.net/gh/yz-hs/PicGo/%E6%90%ADhexo%20(2).png" alt="" /></p><p>点击 create repository。</p><h1 id="4-生成-ssh-添加到-github"><a class="markdownIt-Anchor" href="#4-生成-ssh-添加到-github"></a> 4. 生成 SSH 添加到 GitHub</h1><p>回到 git bash 中，</p><pre class="highlight"><code class="bash">git config --global user.name <span class="hljs-string">&quot;yourname&quot;</span>git config --global user.email <span class="hljs-string">&quot;youremail&quot;</span></code></pre><p>这里的 yourname 输入你的 GitHub 用户名，youremail 输入你 GitHub 的邮箱。</p><p>可以用以下两条，检查一下你有没有输对。</p><pre class="highlight"><code class="bash">git config user.namegit config user.email</code></pre><p>然后创建 SSH,一路回车。</p><pre class="highlight"><code class="bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;youremail&quot;</span></code></pre><p>这个时候它会告诉你已经生成了 .ssh 的文件夹。在你的电脑中找到这个文件夹。</p><p>ssh，简单来讲，就是一个秘钥，其中，id_rsa 是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub 是公共秘钥，可以随便给别人看。把这个公钥放在 GitHub 上，这样当你链接 GitHub 自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过 git 上传你的文件到 GitHub 上。</p><p>而后在 GitHub 的 setting 中，找到 SSH keys 的设置选项，点击 New SSH key 把你的 id_rsa.pub 里面的信息复制进去。</p><pre class="highlight"><code class="bash">ssh -T git@github.com</code></pre><p>如果出现让你写 yes 或 no,写 yes。</p><h1 id="5-将-hexo-部署到-github"><a class="markdownIt-Anchor" href="#5-将-hexo-部署到-github"></a> 5. 将 Hexo 部署到 GitHub</h1><p>这一步，我们就可以将 Hexo 和 GitHub 关联起来，也就是将 Hexo 生成的文章部署到 GitHub 上，打开站点配置文件 <code>_config.yml</code>，翻到最后，修改为 YourName 就是你的 GitHub 账户</p><pre class="highlight"><code class="yml"><span class="hljs-attr">deploy:</span>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span>  <span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:YourName/YourName.github.io.git</span>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span></code></pre><p>安装 deploy-git，也就是部署的命令,这样你才能用命令部署到 GitHub。</p><pre class="highlight"><code class="bash">npm install hexo-deployer-git --save</code></pre><p>然后</p><pre class="highlight"><code class="bash">hexo cleanhexo generatehexo deploy</code></pre><p>其中 hexo clean 清除了你之前生成的东西，也可以不加。 hexo generate 顾名思义，生成静态文章，可以用 hexo g 缩写；hexo deploy 部署文章，可以用 hexo d 缩写</p><p>出现 <code>INFO  Deploy done: git</code> 就说明部署成功了，过一会儿就可以在 <code>http://yourname.github.io</code> 这个网站看到你的博客了。</p><h1 id="6-参考"><a class="markdownIt-Anchor" href="#6-参考"></a> 6. 参考</h1><p><a href="https://zhuanlan.zhihu.com/p/44213627">https://zhuanlan.zhihu.com/p/44213627</a></p><p>接下来就要你自己配置了。</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欢迎</title>
      <link href="/2019/08/19/%E6%AC%A2%E8%BF%8E/"/>
      <url>/2019/08/19/%E6%AC%A2%E8%BF%8E/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 Yurchiu 的博客！希望我们能相互交流，共同进步～</p><span id="more"></span><!-- https://cdn.jsdelivr.net/gh/yz-hs/PicGo/newyear-welcome.jpg --><h1 id="欢迎-dalao-来访"><a class="markdownIt-Anchor" href="#欢迎-dalao-来访"></a> 欢迎 Dalao 来访</h1><h2 id="why-blog"><a class="markdownIt-Anchor" href="#why-blog"></a> Why Blog</h2><div class="alert alert-info">Why Blog“三段论”来自 yelog，并非原创。</div>喜欢写 Blog 的人，会经历三个阶段。<blockquote><p>第一阶段，刚接触 Blog，觉得很新鲜，试着选择一个免费空间来写。</p></blockquote><blockquote><p>第二阶段，发现免费空间限制太多，就自己购买域名和空间，搭建独立博客。</p></blockquote><blockquote><p>第三阶段，觉得独立博客的管理太麻烦，最好在保留控制权的前提下，让别人来管，自己只负责写文章。</p></blockquote><p>我们每个人的在网络上产生的数据越来越多，这些信息是我们在互联网上存在过的痕迹，值得我们认真对待。但是它们被分散分布在各个网站上。很多时候我们很难将它们聚合在一起，而且各个网站的信息排布方式也没有办法自由控制，所以我们需要一个可以由自己主宰的空间——博客。</p><p>通过博客，我们可以记录自己的生活和成长的轨迹。它不像 Twitter 那样碎片化，也不像 Facebook 那样关系化，它是私人的空间。</p><h1 id="网站指南"><a class="markdownIt-Anchor" href="#网站指南"></a> 网站指南</h1><h2 id="侧边栏"><a class="markdownIt-Anchor" href="#侧边栏"></a> 侧边栏</h2><ul><li>说说：一些简短的话，不至于发新文章，以说说形式发布。</li><li>留言：有什么想法、建议、吐槽、Bug 反馈，可以留言！</li><li>链接：一些友链，以及有用的网站。</li></ul><h2 id="已知-bug"><a class="markdownIt-Anchor" href="#已知-bug"></a> 已知 Bug</h2><ul><li>本主题或多或少有一些无法解决的 Bug。</li><li>题解的 CODE 会不可避免地被 HACK！Dalao 们若发现错误 / 不明确的地方请提出您宝贵的意见。</li></ul><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><p>本站域名不再更换（AFO 了），请直接访问 <a href="https://Yurchiu.github.io">https://Yurchiu.github.io</a>。</p><p>更换记录：<code>yz-hs.github.io</code> -&gt; <code>orzyz.tk</code> -&gt; <code>yz-hs.tk</code> -&gt; <code>cieu.tk</code> -&gt; <code>yz-hs.github.io</code> -&gt; <code>Yurchiu.github.io</code>。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
